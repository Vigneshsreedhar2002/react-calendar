{"version":3,"sources":["reducers/calendarReducer.js","reducers/serviceChangeReducer.js","store/index.js","actions/actionTypes.js","actions/actionCreatorsObj.js","components/Day.jsx","actions/actionCreatorsDispatch.js","components/NewEventButton.jsx","components/DayDetail.jsx","components/EditField.jsx","components/NewEventSidebar.jsx","components/Buttons.jsx","components/Calendar.jsx","App.js","index.js"],"names":["initialState","currentDayOfMonth","currentMonth","currentYear","days","dayDetail","today","events","detailSidebarToggled","eventsSidebarToggled","newEventSidebarToggled","editEventSidebarToggled","eventDate","id","eventName","date","time","participants","description","reducer","combineReducers","calendarState","state","action","type","payload","month","year","filter","e","eventState","name","value","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","prevMonthObj","nextMonthObj","setDayDetailObj","toggleDetailSidebarObj","condition","toggleEventsSidebarObj","toggleNewEventSidebarObj","setEventsObj","changeServiceField","addEventDate","Day","day","visible","dayOfMonth","calendarContext","useSelector","dispatch","useDispatch","todaysEvents","forEach","event","push","cn","Date","getDate","className","onClick","map","el","index","key","getCurrentDateDispatch","currDayOfMonth","currMonth","currYear","startingDay","getDay","getCurrentDateObj","setDaysDispatch","sd","m","y","emptyDaysTop","emptyDaysBottom","totalDaysOfMonth","includes","daysArr","newM","newI","i","dayObj","setDaysObj","getEventsFromLS","localStorage","getItem","JSON","parse","addEventsToLS","setItem","stringify","NewEventButton","DayDetail","style","top","scrollY","moment","months","target","classList","toggle","deleteEventObj","EditField","onEdited","options","onChange","maxLength","NewEventSidebar","useState","setEventName","setDate","setTime","setParticipants","setDescription","eventContext","handleChange","evt","sendValue","defaultValue","htmlFor","alert","console","log","changeEvent","localStorageArr","newEvent","uuid","v4","addEventDispatch","Buttons","Calendar","body","document","getElementsByTagName","useEffect","overflowY","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aba59b4b.chunk.js","sourcesContent":["import {\n  GET_CURRENT_DATE,\n  SET_DAYS,\n  PREV_MONTH,\n  NEXT_MONTH,\n  TOGGLE_DETAIL_SB,\n  TOGGLE_EVENTS_SB,\n  TOGGLE_NEW_EVENT_SB,\n  SET_DAY_DETAIL,\n  DELETE_EVENT,\n  SET_EVENTS,\n  ADD_EVENT_DATE,\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  currentDayOfMonth: null,\n  currentMonth: null,\n  currentYear: null,\n  days: [],\n  dayDetail: {\n    today: null,\n    events: []\n  },\n  detailSidebarToggled: false,\n  eventsSidebarToggled: false,\n  newEventSidebarToggled: false,\n  editEventSidebarToggled: false,\n  eventDate: '',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CURRENT_DATE:\n\n      return {\n        ...state,\n        currentDayOfMonth: action.payload.date,\n          currentMonth: action.payload.month,\n          currentYear: action.payload.year\n      };\n    case SET_DAYS:\n      return {\n        ...state,\n        days: action.payload\n      };\n    case PREV_MONTH:\n      return {\n        ...state,\n        currentMonth: action.payload.month,\n          currentYear: action.payload.year\n      };\n    case NEXT_MONTH:\n      return {\n        ...state,\n        currentMonth: action.payload.month,\n          currentYear: action.payload.year\n      };\n    case TOGGLE_DETAIL_SB:\n      return {\n        ...state,\n        detailSidebarToggled: action.payload\n      };\n    case TOGGLE_EVENTS_SB:\n      return {\n        ...state,\n        eventsSidebarToggled: action.payload\n      };\n    case TOGGLE_NEW_EVENT_SB:\n      return {\n        ...state,\n        newEventSidebarToggled: action.payload\n      };\n    case SET_DAY_DETAIL:\n      return {\n        ...state,\n        dayDetail: action.payload\n      };\n\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: state.events.filter(e => e.id !== action.payload)\n      };\n    case SET_EVENTS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case ADD_EVENT_DATE:\n      return {\n        ...state,\n        eventDate: action.payload\n      };\n    default:\n      return state;\n  }\n};","import {\n    CHANGE_EVENT_FIELD,\n    EDIT_EVENT,\n    CLEAR_EVENT_FIELD\n} from \"../actions/actionTypes\";\n\n\nconst initialState = {\n    id: \"\",\n    eventName: \"\",\n    date: \"\",\n    time: \"\",\n    participants: \"\",\n    description: \"\",\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case EDIT_EVENT:\n            return {\n                ...action.payload\n            }\n            case CHANGE_EVENT_FIELD:\n                const {\n                    name, value\n                } = action.payload;\n                return {\n                    ...state, [name]: value\n                };\n\n            case CLEAR_EVENT_FIELD:\n                return {\n                    ...initialState\n                }\n                default:\n                    return state;\n    }\n};","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport calendarReducer from '../reducers/calendarReducer';\nimport serviceChangeReducer from '../reducers/serviceChangeReducer'\n\nconst reducer = combineReducers({\n    calendarState: calendarReducer,\n    eventState: serviceChangeReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport default store;","export const GET_CURRENT_DATE = \"GET_CURRENT_DATE\";\nexport const SET_DAYS = \"SET_DAYS\";\nexport const PREV_MONTH = \"PREV_MONTH\";\nexport const NEXT_MONTH = \"NEXT_MONTH\";\nexport const TOGGLE_DETAIL_SB = \"TOGGLE_DETAIL_SB\";\nexport const TOGGLE_EVENTS_SB = \"TOGGLE_EVENTS_SB\";\nexport const TOGGLE_NEW_EVENT_SB = \"TOGGLE_NEW_EVENT_SB\";\nexport const SET_DAY_DETAIL = \"SET_DAY_DETAIL\";\nexport const ADD_EVENT_DATE = \"ADD_EVENT_DATE\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const SET_EVENTS = \"SET_EVENTS\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\nexport const CHANGE_EVENT_FIELD = \"CHANGE_SERVICE_FIELD\";\nexport const CLEAR_EVENT_FIELD = \"CLEAR_EVENT_FIELD\";","import {\n  GET_CURRENT_DATE,\n  SET_DAYS,\n  PREV_MONTH,\n  NEXT_MONTH,\n  TOGGLE_DETAIL_SB,\n  TOGGLE_EVENTS_SB,\n  TOGGLE_NEW_EVENT_SB,\n  EDIT_EVENT,\n  SET_DAY_DETAIL,\n  SET_EVENTS,\n  DELETE_EVENT,\n  CHANGE_EVENT_FIELD,\n  CLEAR_EVENT_FIELD,\n  ADD_EVENT_DATE\n} from \"./actionTypes\";\n\n\nexport const setDaysObj = (daysArr) => ({\n  type: SET_DAYS,\n  payload: daysArr\n});\n\n\nexport const getCurrentDateObj = (year, month, date) => ({\n  type: GET_CURRENT_DATE,\n  payload: {\n    year,\n    month,\n    date,\n  },\n});\n\n// Get prev month\nexport const prevMonthObj = (month, year) => ({\n  type: PREV_MONTH,\n  payload: {\n    month,\n    year\n  }\n});\n\n// Get next month\nexport const nextMonthObj = (month, year) => ({\n  type: NEXT_MONTH,\n  payload: {\n    month,\n    year\n  }\n});\n\n\n// Set day detail\nexport const setDayDetailObj = (today, events) => ({\n  type: SET_DAY_DETAIL,\n  payload: {\n    today,\n    events\n  }\n});\n\n// Toggle Detail Sidebar\nexport const toggleDetailSidebarObj = condition => ({\n  type: TOGGLE_DETAIL_SB,\n  payload: condition\n});\n\n// Toggle Events Sidebar\nexport const toggleEventsSidebarObj = condition => ({\n  type: TOGGLE_EVENTS_SB,\n  payload: condition\n});\n\n// Toggle New Event Sidebar\nexport const toggleNewEventSidebarObj = condition => ({\n  type: TOGGLE_NEW_EVENT_SB,\n  payload: condition\n});\n\nexport const editEventSidebarObj = obj => ({\n  type: EDIT_EVENT,\n  payload: obj\n})\n\n//   // Delete event\nexport const deleteEventObj = id => ({\n  type: DELETE_EVENT,\n  payload: id\n\n});\n\n// Set events\nexport const setEventsObj = events => ({\n  type: SET_EVENTS,\n  payload: events\n\n});\n// Change event field\nexport const changeServiceField = (name, value) => ({\n  type: CHANGE_EVENT_FIELD,\n  payload: {\n    name,\n    value\n  }\n})\n\n// Clear event field\nexport const clearEventField = () => ({\n  type: CLEAR_EVENT_FIELD,\n})\n\n// Add event date when you in DayDetail window\nexport const addEventDate = (date) => ({\n  type: ADD_EVENT_DATE,\n  payload: date\n})","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDayDetailObj, addEventDate, toggleDetailSidebarObj, toggleEventsSidebarObj, toggleNewEventSidebarObj } from \"../actions/actionCreatorsObj\";\n\nconst Day = ({ day: { visible, dayOfMonth, date } }) => {\n\n  const calendarContext = useSelector(state => state.calendarState);\n  const dispatch = useDispatch();\n\n  const {\n    events,\n  } = calendarContext;\n\n  let todaysEvents = [];\n\n  events.forEach(event => {\n    if (date === event.date) {\n      todaysEvents.push(event);\n    }\n  });\n\n  const d = new Date();\n  const today = d.getDate();\n  let cn = \"day\";\n\n  if (today === dayOfMonth) cn = \"day current-day\";\n  if (!visible) cn = \"day hidden\";\n\n  return (\n    <button\n      className={cn}\n      onClick={() => {\n        dispatch(setDayDetailObj(dayOfMonth, todaysEvents))\n        dispatch(toggleDetailSidebarObj(true));\n        dispatch(toggleEventsSidebarObj(false));\n        dispatch(toggleNewEventSidebarObj(false));\n        dispatch(addEventDate(dayOfMonth))\n      }}\n    >\n      {dayOfMonth}\n      <div>\n        {todaysEvents.map((el, index) => (\n          <span key={index} el={el}>\n            {\" \"}\n            <i className={`fas fa-star ${el.participants}`}></i>\n          </span>\n        ))}\n      </div>\n    </button>\n  );\n};\n\nexport default Day;\n","import {\n  getCurrentDateObj,\n  prevMonthObj,\n  nextMonthObj,\n  setDaysObj,\n  deleteEventObj,\n  setEventsObj,\n\n} from \"./actionCreatorsObj\";\n\nimport uuid from \"uuid\";\n\n\nexport const getCurrentDateDispatch = (year, month, date) => (dispatch) => {\n\n  const currDayOfMonth = date;\n  const currMonth = month;\n  const currYear = year;\n\n  // Find the starting day of the month\n  let startingDay = new Date(currYear, currMonth - 1, 1).getDay();\n\n  dispatch(getCurrentDateObj(currYear, currMonth, currDayOfMonth))\n  dispatch(setDaysDispatch(startingDay, currMonth, currYear));\n};\n\n\nexport const setDaysDispatch = (sd, m, y) => (dispatch) => {\n\n  let emptyDaysTop = sd === 0 ? 6 : sd - 1;\n  let emptyDaysBottom = 0;\n  let totalDaysOfMonth = 0;\n\n  if ([1, 3, 5, 7, 8, 10, 12].includes(m)) {\n    emptyDaysBottom = 7 - ((sd + 30) % 7);\n    totalDaysOfMonth = 31;\n  } else if ([4, 6, 9, 11].includes(m)) {\n    emptyDaysBottom = 7 - ((sd + 29) % 7);\n    totalDaysOfMonth = 30;\n  } else {\n    if ((y % 4 === 0 && y % 100 !== 0) || y % 400 === 0) {\n      // Leap year\n      emptyDaysBottom = 7 - ((sd + 28) % 7);\n      totalDaysOfMonth = 29;\n    } else {\n      // Not a leap year\n      emptyDaysBottom = 7 - ((sd + 27) % 7);\n      totalDaysOfMonth = 28;\n    }\n  }\n\n  // Create days array\n  let daysArr = [];\n  let newM = \"\";\n  let newI = \"\";\n  for (let i = 0; i < emptyDaysTop; i++) {\n    let dayObj = {\n      visible: false,\n      dayOfMonth: 0,\n      date: m < 10 ? `${y}-0${m}-${i}` : `${y}-${m}-${i}`\n    };\n    daysArr.push(dayObj);\n  }\n  for (let i = 1; i <= totalDaysOfMonth; i++) {\n    if (m < 10) {\n      newM = `0${m}`;\n    } else {\n      newM = m;\n    }\n\n    if (i < 10) {\n      newI = `0${i}`;\n    } else {\n      newI = i;\n    }\n\n    let dayObj = {\n      visible: true,\n      dayOfMonth: i,\n      date: `${y}-${newM}-${newI}`\n    };\n    daysArr.push(dayObj);\n  }\n  for (let i = 0; i < emptyDaysBottom; i++) {\n    let dayObj = {\n      visible: false,\n      dayOfMonth: 0,\n      date: m < 10 ? `${y}-0${m}-${i}` : `${y}-${m}-${i}`\n    };\n    daysArr.push(dayObj);\n  }\n\n  dispatch(setDaysObj(daysArr))\n};\n\n// Get prev month\nexport const prevMonthDispatch = (state) => (dispatch) => {\n  if (state.currentMonth === 1) {\n    dispatch(getCurrentDateDispatch(state.currentYear - 1, 12, 1));\n    dispatch(prevMonthObj(12, state.currentYear - 1))\n\n  } else {\n    dispatch(getCurrentDateDispatch(state.currentYear, state.currentMonth - 1, 1));\n    dispatch(prevMonthObj(state.currentMonth - 1, state.currentYear))\n\n  }\n};\n\n// Get next month\nexport const nextMonthDispatch = (state) => (dispatch) => {\n  if (state.currentMonth === 12) {\n    dispatch(getCurrentDateDispatch(state.currentYear + 1, 1, 1));\n    dispatch(nextMonthObj(1, state.currentYear + 1))\n  } else {\n    dispatch(getCurrentDateDispatch(state.currentYear, state.currentMonth + 1, 1));\n\n    dispatch(nextMonthObj(state.currentMonth + 1, state.currentYear))\n\n  }\n};\n\n\n// Add event\nexport const addEventDispatch = (id, eventName, date, time, participants, description, state) => (dispatch) => {\n\n  console.log(localStorage.getItem(\"events\"))\n  //const localStorageElement = JSON.parse(localStorage.getItem(\"events\")).find(el => el.id === id);\n\n  \n\n  let events;\n\n  //if (localStorageElement) {\n    if (localStorage.getItem(\"events\")) {\n    //const localStorageElement = JSON.parse(localStorage.getItem(\"events\")).find(el => el.id === id);\n    const changeEvent = {\n      id: id,\n      date: date,\n      time: time,\n      participants: participants,\n      eventName: eventName,\n      description: description\n    }\n    const localStorageArr = JSON.parse(localStorage.getItem(\"events\")).filter(e => e.id !== id);\n    events = [...localStorageArr, changeEvent]\n  } else {\n    let newEvent = {\n      id: uuid.v4(),\n      date: date,\n      time: time,\n      participants: participants,\n      eventName: eventName,\n      description: description\n    }\n\n    events = [...state.events, newEvent]\n\n  };\n\n  addEventsToLS(events);\n  dispatch(getEventsFromLS());\n\n  getCurrentDateDispatch(state.currentYear, state.currentMonth, 1);\n};\n\n// Delete event\nexport const deleteEventDispatch = (state, id) => (dispatch) => {\n  let events = state.events.filter(e => e.id !== id);\n  addEventsToLS(events);\n  getEventsFromLS();\n\n  dispatch(deleteEventObj(id))\n};\n\n// Get events from localstorage\nexport const getEventsFromLS = () => (dispatch) => {\n  const events = localStorage.getItem(\"events\");\n  if (events === null) {\n    dispatch(setEventsObj([]));\n  } else {\n    dispatch(setEventsObj(JSON.parse(events)));\n  }\n};\n\n// Add event to localstorage\nexport const addEventsToLS = events => {\n  localStorage.setItem(\"events\", JSON.stringify(events));\n};","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, clearEventField, addEventDate, toggleEventsSidebarObj, toggleNewEventSidebarObj, toggleDetailSidebarObj } from \"../actions/actionCreatorsObj\";\n\n\nconst NewEventButton = ({ date }) => {\n\n  const calendarContext = useSelector(state => state.calendarState);\n  const dispatch = useDispatch();\n\n  const {\n    newEventSidebarToggled,\n    eventDate,\n    days\n  } = calendarContext;\n\n  const dispatchEditEventDate = () => {\n    dispatch(addEventDate(date))\n    dispatch(changeServiceField('date', days[eventDate].date))\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"button-group\">\n        <button\n          className=\"new-event-btn\"\n          onClick={() => {\n            dispatch(toggleNewEventSidebarObj(!newEventSidebarToggled));\n            dispatch(toggleEventsSidebarObj(false));\n            dispatch(toggleDetailSidebarObj(false))\n            dispatch(clearEventField())\n            date ? dispatchEditEventDate() : dispatch(addEventDate(null))\n          }}\n        >\n          <i className=\"fas fa-plus\"></i> New Event\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default NewEventButton;\n","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteEventDispatch } from \"../actions/actionCreatorsDispatch\";\nimport NewEventButton from \"./NewEventButton\";\nimport { editEventSidebarObj, setDayDetailObj, toggleDetailSidebarObj, toggleNewEventSidebarObj } from \"../actions/actionCreatorsObj\";\nimport moment from 'moment';\n\n\nconst DayDetail = () => {\n\n  const calendarContext = useSelector(state => state.calendarState);\n  const dispatch = useDispatch();\n\n  const {\n    detailSidebarToggled,\n    dayDetail,\n    currentMonth,\n    currentYear,\n  } = calendarContext;\n\n  const fullEvent = (el) => {\n    el.classList.toggle('active')\n  }\n\n  return (\n    <div\n      className={\n        detailSidebarToggled\n          ? \"detail-sidebar toggled box-shadow\"\n          : \"detail-sidebar\"\n      }\n      style={{\n        top: window.scrollY\n      }}\n    >\n      <button\n        className=\"sidebar__close-btn\"\n        onClick={() => {\n          dispatch(toggleDetailSidebarObj(false));\n          dispatch(toggleNewEventSidebarObj(false));\n        }}\n      >\n        <i className=\"fas fa-times-circle\"></i>\n      </button>\n      <p className=\"detail-sidebar__date\">{`${moment.months(currentMonth - 1)} ${dayDetail.today}, ${currentYear}`}</p>\n      <ul className=\"detail-sidebar__events\">\n        {dayDetail.events.map(event => (\n          <li\n            className=\"event-item\"\n            onClick={(e) => fullEvent(e.target)}\n            key={event.id + event.name}>\n            {event.eventName}\n\n            <button\n              className=\"delete-event-btn\"\n              onClick={() => {\n                dispatch(deleteEventDispatch(calendarContext, event.id));\n                dispatch(setDayDetailObj(\n                  dayDetail.today,\n                  dayDetail.events.filter(e => e.id !== event.id)\n                ));\n              }}\n            >\n              <i className=\"fas fa-trash\"></i>\n            </button>\n            <button\n              className=\"edit-event-btn\"\n              onClick={() => {\n                dispatch(toggleNewEventSidebarObj(true));\n                dispatch(toggleDetailSidebarObj(false))\n                dispatch(editEventSidebarObj(event))\n              }}\n            >\n              <i className=\"fas fa-edit\"></i>\n            </button>\n            <p className=\"event-date\"><span className=\"text-bold\">Date: </span>{event.date}</p>\n            <p className=\"event-time\"><span className=\"text-bold\">Time: </span>{event.time}</p>\n            <p className=\"event-eventName\"><span className=\"text-bold\">Event Name: </span> {event.eventName}</p>\n            <p className=\"event-participants\"><span className=\"text-bold\">Performer: </span>{event.participants}</p>\n            <p className=\"event-description\"><span className=\"text-bold\">Description: </span>{event.description}</p>\n          </li>\n        ))}\n      </ul>\n\n      <NewEventButton date={dayDetail.today} />\n    </div>\n  );\n};\n\nexport default DayDetail;\n","import React from 'react'\n\nfunction EditField({ onEdited, value, type, name, className, options }) {\n\n    return (\n        <>\n            {type === 'select' ?\n                <select\n                    className={className}\n                    name={name}\n                    value={value}\n                    onChange={onEdited}\n                >\n                    {options ? options.map((el, index) => (\n                        <option key={index} value={el}>{el}</option>\n                    )) : null}\n                </select> :\n                <input\n                    type={type}\n                    name={name}\n                    className={className}\n                    value={value}\n                    maxLength=\"30\"\n                    onChange={onEdited}\n\n                />}\n        </>\n    )\n}\n\n\nexport default EditField\n\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addEventDispatch } from \"../actions/actionCreatorsDispatch\"\nimport { changeServiceField, toggleNewEventSidebarObj } from \"../actions/actionCreatorsObj\";\nimport EditField from \"./EditField\";\n\nconst NewEventSidebar = () => {\n\n  const [eventName, setEventName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [participants, setParticipants] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const calendarContext = useSelector(state => state.calendarState);\n  const eventContext = useSelector(state => state.eventState);\n  const dispatch = useDispatch();\n\n  const {\n    newEventSidebarToggled,\n  } = calendarContext;\n\n\n  const clearInputs = () => {\n    setEventName(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    setParticipants(\"\");\n    setDescription(\"\");\n  };\n\n  const handleChange = evt => {\n\n    const { name, value } = evt.target;\n\n    if (name === 'eventName') setEventName(value)\n    if (name === 'date') setDate(value)\n    if (name === 'time') setTime(value)\n    if (name === 'participants') setParticipants(value)\n    if (name === 'description') setDescription(value)\n\n    dispatch(changeServiceField(name, value));\n  }\n\n  const sendValue = (value, defaultValue) => value ? value : defaultValue;\n\n  return (\n    <div\n      className={\n        newEventSidebarToggled\n          ? \"new-event-sidebar toggled box-shadow\"\n          : \"new-event-sidebar\"\n      }\n      style={{\n        top: window.scrollY\n      }}\n    >\n      <button\n        className=\"sidebar__close-btn\"\n        onClick={() => {\n          dispatch(toggleNewEventSidebarObj(false))\n        }}\n      >\n        <i className=\"fas fa-times-circle\"></i>\n      </button>\n      <p className=\"new-event-sidebar__title\">Add a new event</p>\n      <label htmlFor=\"new-event-sidebar__description\">Event Name</label>\n      <EditField\n        onEdited={handleChange}\n        value={sendValue(eventContext.eventName, eventName)}\n        type=\"text\" name=\"eventName\"\n        className=\"new-event-sidebar__description\"\n      />\n\n      <label htmlFor=\"new-event-sidebar__date\">Date</label>\n      <EditField\n        onEdited={handleChange}\n        value={sendValue(eventContext.date, date)}\n        type=\"date\" name=\"date\"\n        className=\"new-event-sidebar__date\"\n      />\n\n      <label htmlFor=\"new-event-sidebar__date\">Time</label>\n      <EditField\n        onEdited={handleChange}\n        value={sendValue(eventContext.time, time)}\n        type=\"select\" name=\"time\"\n        className=\"new-event-sidebar__type\"\n        options={['', '00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00', '24:00',]}\n      />\n\n      <label htmlFor=\"new-event-sidebar__type\">Members</label>\n      <EditField\n        onEdited={handleChange}\n        value={sendValue(eventContext.participants, participants)}\n        type=\"select\"\n        name=\"participants\"\n        className=\"new-event-sidebar__type\"\n        options={['', 'Ivan', 'Julia', 'Dan', 'Michael']}\n      />\n\n      <label htmlFor=\"new-event-sidebar__reminder\">Description</label>\n      <EditField onEdited={handleChange} value={sendValue(eventContext.description, description)} type=\"text\" name=\"description\" className=\"new-event-sidebar__description\" />\n\n      <button\n        className=\"new-event-sidebar__add-btn\"\n        onClick={() => {\n          if (eventContext.eventName === \"\" || eventContext.date === \"\") {\n            return alert(\"Fill both of event-name and date fields.\");\n          } else {\n            dispatch(\n              addEventDispatch(\n                eventContext.id,\n                eventContext.eventName,\n                eventContext.date,\n                eventContext.time,\n                eventContext.participants,\n                eventContext.description,\n                calendarContext\n              )\n            );\n            clearInputs();\n          }\n          dispatch(toggleNewEventSidebarObj(false))\n        }}\n      >\n        Add Event\n      </button>\n    </div>\n  );\n};\n\nexport default NewEventSidebar;\n","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { prevMonthDispatch, nextMonthDispatch } from \"../actions/actionCreatorsDispatch\"\n\n\nconst Buttons = () => {\n\n  const calendarContext = useSelector(state => state.calendarState);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"buttons\">\n      <button\n        className=\"prev-btn\"\n        onClick={() => {\n          dispatch(prevMonthDispatch(calendarContext));\n        }}\n      >\n        <i className=\"fas fa-chevron-left\"></i>\n      </button>\n      <button\n        className=\"next-btn\"\n        onClick={() => {\n          dispatch(nextMonthDispatch(calendarContext));\n        }}\n      >\n        <i className=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Day from \"./Day\";\nimport DayDetail from \"./DayDetail\";\nimport NewEventSidebar from \"./NewEventSidebar\";\nimport Buttons from \"./Buttons\";\nimport { getCurrentDateDispatch, getEventsFromLS } from \"../actions/actionCreatorsDispatch\"\n\nimport moment from 'moment';\n\nconst Calendar = () => {\n  const body = document.getElementsByTagName(\"body\");\n  const dispatch = useDispatch();\n  const calendarContext = useSelector(state => state.calendarState);\n\n  const {\n    currentMonth,\n    currentYear,\n    days,\n    detailSidebarToggled,\n    eventsSidebarToggled,\n    newEventSidebarToggled,\n    editEventSidebarToggled,\n  } = calendarContext;\n\n\n\n  useEffect(() => {\n    dispatch(getCurrentDateDispatch(moment().year(), moment().month() + 1, moment().date()));\n    dispatch(getEventsFromLS());\n  }, [dispatch]);\n\n  if (\n    detailSidebarToggled ||\n    eventsSidebarToggled ||\n    newEventSidebarToggled ||\n    editEventSidebarToggled\n  ) {\n    body[0].style.overflowY = \"hidden\";\n  } else {\n    body[0].style.overflowY = \"visible\";\n  }\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"title\">\n        {moment.months(currentMonth - 1)} {currentYear}{\" \"}\n        <Buttons />\n      </div>\n      <div className=\"calendar-table\">\n        <div className=\"thead\">\n          <div>Monday</div>\n          <div>Tuesday</div>\n          <div>Wednesday</div>\n          <div>Thursday</div>\n          <div>Friday</div>\n          <div>Saturday</div>\n          <div>Sunday</div>\n        </div>\n        <div className=\"thead-sm\">\n          <div>M</div>\n          <div>T</div>\n          <div>W</div>\n          <div>Th</div>\n          <div>F</div>\n          <div>St</div>\n          <div>S</div>\n        </div>\n        <div className=\"tbody\">\n          {days.map((day, index) => (\n            <Day key={index} day={day} />\n          ))}\n        </div>\n      </div>\n      <DayDetail />\n      <NewEventSidebar />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport Calendar from \"./components/Calendar\";\nimport \"./css/App.css\";\nimport NewEventButton from \"./components/NewEventButton\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <NewEventButton />\n        <div className=\"container\">\n          <Calendar />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from './store';\nimport App from \"./App\";\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}